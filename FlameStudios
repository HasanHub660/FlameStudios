local Players = game:GetService("Players") local UserInputService = game:GetService("UserInputService") local RunService = game:GetService("RunService") local TweenService = game:GetService("TweenService") local player = Players.LocalPlayer

local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui")) gui.Name = "UltraFancySpeedJumpFly" gui.ResetOnSpawn = false

local themes = { Dark = { Background = Color3.fromRGB(40, 40, 50), Button = Color3.fromRGB(90, 90, 90), Text = Color3.new(1, 1, 1) }, Light = { Background = Color3.fromRGB(230, 230, 240), Button = Color3.fromRGB(180, 180, 200), Text = Color3.fromRGB(0, 0, 0) } }

local currentTheme = "Dark"

local container = Instance.new("Frame", gui) container.Size = UDim2.new(0, 300, 0, 360) container.Position = UDim2.new(0.5, -150, 0.5, -180) container.BackgroundColor3 = themes[currentTheme].Background container.BackgroundTransparency = 0.2 container.BorderSizePixel = 0 container.Visible = true container.ClipsDescendants = true Instance.new("UICorner", container).CornerRadius = UDim.new(0, 16) local stroke = Instance.new("UIStroke", container) stroke.Color = Color3.fromRGB(70, 70, 90) stroke.Thickness = 2 stroke.Transparency = 0.2

local resizeHandle = Instance.new("Frame", container) resizeHandle.Size = UDim2.new(0, 20, 0, 20) resizeHandle.Position = UDim2.new(1, -20, 1, -20) resizeHandle.BackgroundColor3 = Color3.fromRGB(100, 100, 120) resizeHandle.BackgroundTransparency = 0.5 resizeHandle.BorderSizePixel = 0 resizeHandle.ZIndex = 2 Instance.new("UICorner", resizeHandle).CornerRadius = UDim.new(1, 0)

local resizing = false resizeHandle.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseButton1 then resizing = true end end) UserInputService.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseButton1 then resizing = false end end) UserInputService.InputChanged:Connect(function(input) if resizing and input.UserInputType == Enum.UserInputType.MouseMovement then local mousePos = input.Position local x = math.clamp(mousePos.X - container.AbsolutePosition.X, 200, 600) local y = math.clamp(mousePos.Y - container.AbsolutePosition.Y, 200, 800) container.Size = UDim2.new(0, x, 0, y) end end)

local title = Instance.new("TextLabel", container) title.Size = UDim2.new(1, 0, 0, 40) title.BackgroundTransparency = 1 title.Text = "⚙️ Movement Controller" title.Font = Enum.Font.GothamBold title.TextColor3 = themes[currentTheme].Text title.TextSize = 20

title.ZIndex = 2

local scroll = Instance.new("ScrollingFrame", container) scroll.Size = UDim2.new(1, 0, 1, -40) scroll.Position = UDim2.new(0, 0, 0, 40) scroll.CanvasSize = UDim2.new(0, 0, 0, 500) scroll.ScrollBarThickness = 4 scroll.BackgroundTransparency = 1 scroll.BorderSizePixel = 0 scroll.ZIndex = 1

local layout = Instance.new("UIListLayout", scroll) layout.Padding = UDim.new(0, 10) layout.SortOrder = Enum.SortOrder.LayoutOrder

local buttons = {}

local dragging, offset container.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseButton1 and not resizeHandle:IsDescendantOf(input.Target) then dragging = true offset = input.Position - container.Position end end) UserInputService.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseButton1 then dragging = false end end) UserInputService.InputChanged:Connect(function(input) if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then container.Position = UDim2.new(0, input.Position.X - offset.X, 0, input.Position.Y - offset.Y) end end)

-- The rest of the button creation, fly logic, toggle, etc., remains unchanged. -- You can copy and paste the rest of the previously generated full script content from here.

