-- Services
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
local humanoid

-- Wait for humanoid and set default stats
local function setupHumanoid(char)
    humanoid = char:WaitForChild("Humanoid")
    humanoid.UseJumpPower = true
    humanoid.WalkSpeed = 16
    humanoid.JumpPower = 50
end

if player.Character then
    setupHumanoid(player.Character)
end
player.CharacterAdded:Connect(setupHumanoid)

-- Themes
local Themes = {
    Dark = {
        Background = Color3.fromRGB(20, 20, 20),
        Text = Color3.new(1,1,1),
        Button = Color3.fromRGB(50, 50, 50),
        SectionBackground = Color3.fromRGB(35, 35, 35),
    },
    Light = {
        Background = Color3.fromRGB(245, 245, 245),
        Text = Color3.new(0,0,0),
        Button = Color3.fromRGB(220, 220, 220),
        SectionBackground = Color3.fromRGB(235, 235, 235),
    }
}
local currentTheme = "Dark"

-- Welcome messages
local welcomeMessages = {
    "Welcome back,",
    "Good to see you,",
    "Hello again,",
    "You're looking sharp,",
    "Ready to play,",
    "Letâ€™s do this,"
}
local selectedMessage = welcomeMessages[math.random(1, #welcomeMessages)]

-- Create GUI
local gui = Instance.new("ScreenGui")
gui.Name = "FancyControlUI"
gui.ResetOnSpawn = false
gui.IgnoreGuiInset = true
gui.Parent = player:WaitForChild("PlayerGui")

-- Panel
local panel = Instance.new("ScrollingFrame")
panel.Size = UDim2.new(0.6, 0, 0.6, 0)
panel.Position = UDim2.new(0, -300, 0.2, 0)
panel.BackgroundColor3 = Themes[currentTheme].Background
panel.BorderSizePixel = 0
panel.ScrollBarThickness = 6
panel.CanvasSize = UDim2.new(0, 0, 0, 800)
panel.ClipsDescendants = true
panel.Visible = false
panel.Parent = gui

local panelCorner = Instance.new("UICorner")
panelCorner.CornerRadius = UDim.new(0, 14)
panelCorner.Parent = panel

local layout = Instance.new("UIListLayout")
layout.Padding = UDim.new(0, 10)
layout.FillDirection = Enum.FillDirection.Vertical
layout.HorizontalAlignment = Enum.HorizontalAlignment.Center
layout.VerticalAlignment = Enum.VerticalAlignment.Top
layout.SortOrder = Enum.SortOrder.LayoutOrder
layout.Parent = panel

-- Player info frame (name + avatar + welcome)
local playerInfoFrame = Instance.new("Frame")
playerInfoFrame.Size = UDim2.new(1, -20, 0, 70)
playerInfoFrame.BackgroundTransparency = 1
playerInfoFrame.Parent = panel

local avatarImage = Instance.new("ImageLabel")
avatarImage.Size = UDim2.new(0, 56, 0, 56)
avatarImage.Position = UDim2.new(0, 10, 0, 7)
avatarImage.BackgroundTransparency = 1
avatarImage.Image = "rbxthumb://type=AvatarHeadShot&id="..player.UserId.."&w=420&h=420"
avatarImage.Parent = playerInfoFrame

local playerNameLabel = Instance.new("TextLabel")
playerNameLabel.Size = UDim2.new(1, -80, 0, 28)
playerNameLabel.Position = UDim2.new(0, 72, 0, 6)
playerNameLabel.BackgroundTransparency = 1
playerNameLabel.Font = Enum.Font.GothamBold
playerNameLabel.TextSize = 18
playerNameLabel.TextColor3 = Themes[currentTheme].Text
playerNameLabel.TextXAlignment = Enum.TextXAlignment.Left
playerNameLabel.Text = selectedMessage .. " " .. player.Name .. "!"
playerNameLabel.Parent = playerInfoFrame

-- Animate welcome message fade-in
playerNameLabel.TextTransparency = 1
TweenService:Create(playerNameLabel, TweenInfo.new(0.6), {TextTransparency = 0}):Play()

-- Section creation
local function createSection(title)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0.95, 0, 0, 130)
    frame.BackgroundColor3 = Themes[currentTheme].SectionBackground
    frame.Parent = panel

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 12)
    corner.Parent = frame

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -20, 0, 26)
    label.Position = UDim2.new(0, 10, 0, 6)
    label.BackgroundTransparency = 1
    label.Text = title
    label.TextColor3 = Themes[currentTheme].Text
    label.Font = Enum.Font.GothamBold
    label.TextSize = 17
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = frame

    return frame
end

local function createSectionButton(parent, text, callback)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0.9, 0, 0, 34)
    btn.Position = UDim2.new(0.05, 0, 0, 0)
    btn.BackgroundColor3 = Themes[currentTheme].Button
    btn.TextColor3 = Themes[currentTheme].Text
    btn.Font = Enum.Font.Gotham
    btn.TextSize = 15
    btn.Text = text
    btn.AutoButtonColor = true
    btn.Parent = parent

    local c = Instance.new("UICorner")
    c.CornerRadius = UDim.new(0, 8)
    c.Parent = btn

    btn.MouseButton1Click:Connect(callback)
    return btn
end

-- Sections
local speedSection = createSection("âš¡ Speed Control")
local jumpSection = createSection("ðŸ¦˜ Jump Control")
local statsSection = createSection("ðŸ“Š Your Stats")
local themeSection = createSection("ðŸŽ¨ Theme & Reset")

-- Speed Controls
createSectionButton(speedSection, "+ Speed +5", function()
    if humanoid then
        humanoid.WalkSpeed += 5
    end
end).Position = UDim2.new(0.05, 0, 0, 40)

createSectionButton(speedSection, "- Speed -5", function()
    if humanoid then
        humanoid.WalkSpeed = math.max(0, humanoid.WalkSpeed - 5)
    end
end).Position = UDim2.new(0.05, 0, 0, 80)

-- Jump Controls
createSectionButton(jumpSection, "+ Jump +10", function()
    if humanoid then
        humanoid.JumpPower = math.min(humanoid.JumpPower + 10, 150)
    end
end).Position = UDim2.new(0.05, 0, 0, 40)

createSectionButton(jumpSection, "- Jump -10", function()
    if humanoid then
        humanoid.JumpPower = math.max(humanoid.JumpPower - 10, 10)
    end
end).Position = UDim2.new(0.05, 0, 0, 80)

-- Stats
local speedStat = Instance.new("TextLabel")
speedStat.Size = UDim2.new(0.9, 0, 0, 26)
speedStat.Position = UDim2.new(0.05, 0, 0, 40)
speedStat.BackgroundTransparency = 1
speedStat.Font = Enum.Font.GothamBold
speedStat.TextSize = 16
speedStat.TextColor3 = Themes[currentTheme].Text
speedStat.TextXAlignment = Enum.TextXAlignment.Left
speedStat.Parent = statsSection

local jumpStat = Instance.new("TextLabel")
jumpStat.Size = UDim2.new(0.9, 0, 0, 26)
jumpStat.Position = UDim2.new(0.05, 0, 0, 80)
jumpStat.BackgroundTransparency = 1
jumpStat.Font = Enum.Font.GothamBold
jumpStat.TextSize = 16
jumpStat.TextColor3 = Themes[currentTheme].Text
jumpStat.TextXAlignment = Enum.TextXAlignment.Left
jumpStat.Parent = statsSection

task.spawn(function()
    while true do
        task.wait(0.2)
        if humanoid then
            speedStat.Text = "Speed: " .. math.floor(humanoid.WalkSpeed)
            jumpStat.Text = "Jump Power: " .. math.floor(humanoid.JumpPower)
        end
    end
end)

-- Theme + Reset
createSectionButton(themeSection, "ðŸ”„ Reset Stats", function()
    if humanoid then
        humanoid.WalkSpeed = 16
        humanoid.JumpPower = 50
    end
end).Position = UDim2.new(0.05, 0, 0, 40)

createSectionButton(themeSection, "ðŸŒ™ Toggle Theme", function()
    currentTheme = currentTheme == "Dark" and "Light" or "Dark"
    panel.BackgroundColor3 = Themes[currentTheme].Background
    for _, section in {speedSection, jumpSection, statsSection, themeSection} do
        section.BackgroundColor3 = Themes[currentTheme].SectionBackground
        for _, child in pairs(section:GetChildren()) do
            if child:IsA("TextLabel") then
                child.TextColor3 = Themes[currentTheme].Text
            elseif child:IsA("TextButton") then
                child.BackgroundColor3 = Themes[currentTheme].Button
                child.TextColor3 = Themes[currentTheme].Text
            end
        end
    end
    playerNameLabel.TextColor3 = Themes[currentTheme].Text
    toggle.BackgroundColor3 = Themes[currentTheme].Button
    toggle.TextColor3 = Themes[currentTheme].Text
end).Position = UDim2.new(0.05, 0, 0, 80)

-- Toggle Button
local toggle = Instance.new("TextButton")
toggle.Size = UDim2.new(0, 36, 0, 36)
toggle.Position = UDim2.new(0, 10, 0.2, 0)
toggle.BackgroundColor3 = Themes[currentTheme].Button
toggle.TextColor3 = Themes[currentTheme].Text
toggle.Font = Enum.Font.GothamBold
toggle.TextSize = 24
toggle.Text = "â‰¡"
toggle.Parent = gui

local toggleCorner = Instance.new("UICorner")
toggleCorner.CornerRadius = UDim.new(1, 0)
toggleCorner.Parent = toggle

-- Make toggle draggable
local dragging = false
local dragInput, dragStart, startPos

local function updateDrag(input)
    local delta = input.Position - dragStart
    toggle.Position = UDim2.new(
        0,
        math.clamp(startPos.X.Offset + delta.X, 0, workspace.CurrentCamera.ViewportSize.X - toggle.AbsoluteSize.X),
        0,
        math.clamp(startPos.Y.Offset + delta.Y, 0, workspace.CurrentCamera.ViewportSize.Y - toggle.AbsoluteSize.Y)
    )
end

toggle.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = toggle.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

toggle.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        updateDrag(input)
    end
end)

-- Toggle show/hide panel
local open = false
toggle.MouseButton1Click:Connect(function()
    open = not open
    local tweenInfo = TweenInfo.new(0.35, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    if open then
        panel.Visible = true
        TweenService:Create(panel, tweenInfo, {Position = UDim2.new(0.2, 0, 0.2, 0)}):Play()
        toggle.Text = "âœ•"
    else
        TweenService:Create(panel, tweenInfo, {Position = UDim2.new(0, -panel.AbsoluteSize.X, 0.2, 0)}):Play()
        task.delay(0.35, function()
            panel.Visible = false
        end)
        toggle.Text = "â‰¡"
    end
end)
